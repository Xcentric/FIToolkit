unit Test_FIToolkit.Reports.Parser.Messages;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, FIToolkit.Reports.Parser.Messages, System.Generics.Collections,
  FIToolkit.Reports.Parser.Types;

type
  // Test methods for class TFixInsightMessages

  TestTFixInsightMessages = class(TTestCase)
  strict private
    FFixInsightMessages: TFixInsightMessages;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestSorted;
  end;

implementation

uses
  System.SysUtils;

procedure TestTFixInsightMessages.SetUp;
begin
  FFixInsightMessages := TFixInsightMessages.Create;
end;

procedure TestTFixInsightMessages.TearDown;
begin
  FFixInsightMessages.Free;
  FFixInsightMessages := nil;
end;

procedure TestTFixInsightMessages.TestSorted;
begin
  FFixInsightMessages.Add(TFixInsightMessage.Create(String.Empty, 3, 0, String.Empty, String.Empty));
  FFixInsightMessages.Add(TFixInsightMessage.Create(String.Empty, 2, 0, String.Empty, String.Empty));

  CheckTrue((FFixInsightMessages[0].Line = 3) and (FFixInsightMessages[1].Line = 2), '[0] = 3 && [1] = 2');
  FFixInsightMessages.Sorted := True;
  CheckTrue((FFixInsightMessages[0].Line = 2) and (FFixInsightMessages[1].Line = 3), '[0] = 2 && [1] = 3');

  FFixInsightMessages.Add(TFixInsightMessage.Create(String.Empty, 1, 0, String.Empty, String.Empty));
  CheckTrue((FFixInsightMessages[0].Line = 1) and (FFixInsightMessages[1].Line = 2), '[0] = 1 && [1] = 2');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTFixInsightMessages.Suite);
end.
