unit Test_FIToolkit.Runner.Tasks;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework,
  System.SysUtils,
  FIToolkit.Runner.Tasks;

type

  // Test methods for class TTaskRunner
  TestTTaskRunner = class (TGenericTestCase)
  strict private
    FTaskRunner : TTaskRunner;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestExecute;
  end;

  // Test methods for class TTaskManager
  TestTTaskManager = class (TGenericTestCase)
  private
    const
      ARR_FILE_NAMES : array of TFileName = [String.Empty, String.Empty];
  strict private
    FTaskManager : TTaskManager;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestRunAndGetOutput;
  end;

implementation

uses
  System.Threading,
  FIToolkit.Config.FixInsight;

procedure TestTTaskRunner.SetUp;
var
  FIO : TFixInsightOptions;
begin
  FIO := TFixInsightOptions.Create;
  try
    FTaskRunner := TTaskRunner.Create(String.Empty, FIO);
  finally
    FIO.Free;
  end;
end;

procedure TestTTaskRunner.TearDown;
begin
  FreeAndNil(FTaskRunner);
end;

procedure TestTTaskRunner.TestExecute;
var
  ReturnValue: ITask;
begin
  ReturnValue := FTaskRunner.Execute;
  // TODO: Validate method results
end;

procedure TestTTaskManager.SetUp;
var
  FIO : TFixInsightOptions;
begin
  FIO := TFixInsightOptions.Create;
  try
    FTaskManager := TTaskManager.Create(String.Empty, FIO, ARR_FILE_NAMES, TestDataDir);
  finally
    FIO.Free;
  end;
end;

procedure TestTTaskManager.TearDown;
begin
  FreeAndNil(FTaskManager);
end;

procedure TestTTaskManager.TestRunAndGetOutput;
var
  ReturnValue: TArray<TFileName>;
begin
  ReturnValue := FTaskManager.RunAndGetOutput;
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTTaskRunner.Suite);
  RegisterTest(TestTTaskManager.Suite);

end.
