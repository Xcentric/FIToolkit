unit Test_FIToolkit.Logger.Default;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework,
  FIToolkit.Logger.Default;

type

  TestFIToolkitLoggerDefault = class (TGenericTestCase)
  private
    const
      STR_LOG_FILE = 'test_file.log';
  published
    procedure TestInitConsoleLog;
    procedure TestInitFileLog;
    procedure TestLog;
  end;

implementation

uses
  System.SysUtils,
  TestUtils;

procedure TestFIToolkitLoggerDefault.TestInitConsoleLog;
begin
  InitConsoleLog;

  CheckException(
    procedure
    begin
      Log.Error([]);
    end,
    nil,
    'CheckException::<nil>'
  );
end;

procedure TestFIToolkitLoggerDefault.TestInitFileLog;
var
  sFileName : TFileName;
begin
  sFileName := TestDataDir + STR_LOG_FILE;
  DeleteFile(sFileName);
  Assert(not FileExists(sFileName));

  InitFileLog(sFileName);

  CheckException(
    procedure
    begin
      Log.Error([]);
    end,
    nil,
    'CheckException::<nil>'
  );
  CheckTrue(FileExists(sFileName), 'CheckTrue::FileExists(sFileName)');
end;

procedure TestFIToolkitLoggerDefault.TestLog;
begin
  CheckTrue(Log <> nil, 'Log <> nil');
  CheckException(
    procedure
    begin
      Log.Error([]);
    end,
    nil,
    'CheckException::<nil>'
  );
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestFIToolkitLoggerDefault.Suite);

end.
